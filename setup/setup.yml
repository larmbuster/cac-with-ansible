---
##
# https://play.instruqt.com/redhat/tracks/cac-with-ansible/
##
- name: Instruqt config compliance as code with ansible
  hosts: localhost
  gather_facts: false
  become: true

  vars:
    username: admin
    admin_password: ansible123!
    lab_credential_name: "Lab Machine Credential"
    lab_project_name: "CAC with Ansible"
    lab_jts: 
      - jt_name: "STIG Linux"
        playbook: /cac-with-ansible/linux.yml
        credential: 
        inventory: "Workshop Inventory"
#      - jt_name: "STIG Windows"
#        playbook: windows.yml
#        credential: 
#        inventory: "Workshop Inventory"
#      - jt_name: "STIG Network"
#        playbook:
#        credential:
#        inventory: "Network Inventory"
    lab_inventory_name: "Workshop Inventory"
    lab_organization: "Default"
    custom_facts_dir: "/etc/ansible/facts.d"
    custom_facts_file: custom_facts.fact

  tasks:
    - name: Ensure tower/controller is online and working
      uri:
        url: https://localhost/api/v2/ping/
        method: GET
        user: "{{ username }}"
        password: "{{ admin_password }}"
        validate_certs: false
        force_basic_auth: true
      register: controller_online
      until: controller_online is success
      delay: 3
      retries: 5

   # Create awx login token and custom fact
    - name: get awx token and restart automation-controller if it fails
      block:
        - name: Gather facts
          setup:

        - name: login awx token
          shell: >
            awx --conf.username admin --conf.password "ansible123!" -k login | jq -r '.token'
          register: awx_token
          until: awx_token is success
          retries: 6
          delay: 3
          failed_when: awx_token.rc > 0
        
      rescue:
        - name: In rescue block for awx token
          debug:
            msg: "failed to get awx token. Restarting automation controller service"

        - name: restart the controller service
          ansible.builtin.service:
            name: automation-controller
            state: restarted

        - name: Ensure tower/controller is online and working
          uri:
            url: https://localhost/api/v2/ping/
            method: GET
            user: "{{ username }}"
            password: "{{ admin_password }}"
            validate_certs: false
            force_basic_auth: true
          register: controller_online
          until: controller_online is success
          delay: 3
          retries: 5

        - name: Retry getting awx token
          shell: >
            awx --conf.username admin --conf.password "ansible123!" -k login | jq -r '.token'
          register: awx_token
          until: awx_token is not failed
          retries: 6
          delay: 3

      always:
        - name: Create fact.d dir
          file:
            path: "{{ custom_facts_dir }}"
            state: directory
            recurse: yes
        
        - name: Create awx-token custom fact
          copy:
            content: |
              [localfacts]
              _awx_token = "{{ awx_token.stdout }}"
            dest: "{{ custom_facts_dir }}/{{ custom_facts_file }}"

        - name: Refresh facts
          setup:
      when: ansible_local.custom_facts.localfacts._awx_token is undefined or  ansible_local.custom_facts.localfacts._awx_token | count == 0
  
    - name: debug custom fact
      debug:
        var: ansible_local.custom_facts.localfacts._awx_token 
        
    # added to controller image build

    - name: Add the {{ lab_inventory_name }} Inventory
      awx.awx.inventory:
        name: "{{ lab_inventory_name }}"
        description: "Workshop Inventory"
        organization: "{{ lab_organization }}"
        state: present
        controller_config_file: "{{ playbook_dir }}/../controller.cfg"

    - name: Import network_setup task file
      ansible.builtin.import_tasks:
        file: network_setup.yml
    
    - name: Add the CAC project
      awx.awx.project:
        name: "{{lab_project_name }}"
        scm_type: git
        scm_url: "https://github.com/larmbuster/cac-with-ansible"
        organization: "Default"
        scm_update_on_launch: false
        scm_update_cache_timeout: 60
        default_environment: "Default execution environment"
        controller_config_file: "{{ playbook_dir }}/../controller.cfg"
        validate_certs: false

    - name: Create the lab job templates
      awx.awx.job_template:
        name: "{{ item.jt_name }}"
        state: present
        become_enabled: true
        project: "{{ lab_project_name }}"
        credential: "{{ item.credential }}"
        inventory: "{{ item.inventory }}"
        playbook: "{{ item.playbook }}"
        controller_config_file: "{{ playbook_dir }}/../controller.cfg"
        validate_certs: false
      loop: "{{ lab_jts }}"
